{"ast":null,"code":"var _jsxFileName = \"/Users/samridhsood/Desktop/frontend/src/scenes/analytics/Total.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, BarElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, Title, Tooltip, Legend, BarElement);\nconst options = {\n  indexAxis: 'x',\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'bottom'\n    },\n    title: {\n      display: true,\n      text: 'Total Marks Obtained',\n      font: {\n        size: 18,\n        weight: 'bold'\n      }\n    }\n  },\n  scales: {\n    x: {\n      grid: {\n        display: false\n      }\n    },\n    y: {\n      grid: {\n        display: false,\n        color: 'rgba(0, 0, 0, 0.1)'\n      },\n      ticks: {\n        beginAtZero: true,\n        stepSize: 5\n      }\n    }\n  }\n};\n\nconst Total = () => {\n  _s();\n\n  const [data, setData] = useState({\n    labels: labels,\n    datasets: [{\n      label: 'Marks obtained',\n      data: marks,\n      backgroundColor: ['rgba(238, 125, 49, 0.8)' // Orange with transparency\n      ],\n      borderColor: ['rgba(238, 125, 49, 1)' // Orange\n      ],\n      borderWidth: 2,\n      borderRadius: 10,\n      hoverBackgroundColor: ['rgba(238, 125, 49, 1)' // Orange (hover)\n      ]\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph\",\n    style: {\n      width: '100%',\n      maxWidth: '500px',\n      height: '400px',\n      margin: '60px auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Total, \"DIYD+KLM3hn5sxBvdDI3hIvrByg=\");\n\n_c = Total;\nexport default Total;\n\nvar _c;\n\n$RefreshReg$(_c, \"Total\");","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","Chart","ChartJS","CategoryScale","LinearScale","Title","Tooltip","Legend","BarElement","register","options","indexAxis","responsive","plugins","legend","position","title","display","text","font","size","weight","scales","x","grid","y","color","ticks","beginAtZero","stepSize","Total","data","setData","labels","datasets","label","marks","backgroundColor","borderColor","borderWidth","borderRadius","hoverBackgroundColor","width","maxWidth","height","margin"],"sources":["/Users/samridhsood/Desktop/frontend/src/scenes/analytics/Total.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, BarElement } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, Title, Tooltip, Legend, BarElement);\n\n\n\nconst options = {\n  indexAxis: 'x',\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'bottom',\n    },\n    title: {\n      display: true,\n      text: 'Total Marks Obtained',\n      font: {\n        size: 18,\n        weight: 'bold',\n      },\n    },\n  },\n  scales: {\n    x: {\n      grid: {\n        display: false,\n      },\n    },\n    y: {\n      grid: {\n        display: false,\n        color: 'rgba(0, 0, 0, 0.1)',\n      },\n      ticks: {\n        beginAtZero: true,\n        stepSize: 5,\n      },\n    },\n  },\n};\n\nconst Total = () => {\n  const [data, setData] = useState({\n    labels: labels,\n    datasets: [\n      {\n        label: 'Marks obtained',\n        data: marks,\n        backgroundColor: [\n          'rgba(238, 125, 49, 0.8)', // Orange with transparency\n        ],\n        borderColor: [\n          'rgba(238, 125, 49, 1)', // Orange\n        ],\n        borderWidth: 2,\n        borderRadius: 10,\n        hoverBackgroundColor: [\n          'rgba(238, 125, 49, 1)', // Orange (hover)\n        ],\n      },\n    ],\n  });\n\n  \n\n\n  return (\n    <div className='graph' style={{ width: '100%', maxWidth: '500px', height: '400px', margin: '60px auto' }}>\n      <Bar data={data} options={options} />\n    </div>\n  );\n};\n\nexport default Total"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAuDC,KAAvD,EAA8DC,OAA9D,EAAuEC,MAAvE,EAA+EC,UAA/E,QAAiG,UAAjG;;AAEAN,OAAO,CAACO,QAAR,CAAiBN,aAAjB,EAAgCC,WAAhC,EAA6CC,KAA7C,EAAoDC,OAApD,EAA6DC,MAA7D,EAAqEC,UAArE;AAIA,MAAME,OAAO,GAAG;EACdC,SAAS,EAAE,GADG;EAEdC,UAAU,EAAE,IAFE;EAGdC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IADJ,CADD;IAIPC,KAAK,EAAE;MACLC,OAAO,EAAE,IADJ;MAELC,IAAI,EAAE,sBAFD;MAGLC,IAAI,EAAE;QACJC,IAAI,EAAE,EADF;QAEJC,MAAM,EAAE;MAFJ;IAHD;EAJA,CAHK;EAgBdC,MAAM,EAAE;IACNC,CAAC,EAAE;MACDC,IAAI,EAAE;QACJP,OAAO,EAAE;MADL;IADL,CADG;IAMNQ,CAAC,EAAE;MACDD,IAAI,EAAE;QACJP,OAAO,EAAE,KADL;QAEJS,KAAK,EAAE;MAFH,CADL;MAKDC,KAAK,EAAE;QACLC,WAAW,EAAE,IADR;QAELC,QAAQ,EAAE;MAFL;IALN;EANG;AAhBM,CAAhB;;AAmCA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAC;IAC/BmC,MAAM,EAAEA,MADuB;IAE/BC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,gBADT;MAEEJ,IAAI,EAAEK,KAFR;MAGEC,eAAe,EAAE,CACf,yBADe,CACY;MADZ,CAHnB;MAMEC,WAAW,EAAE,CACX,uBADW,CACc;MADd,CANf;MASEC,WAAW,EAAE,CATf;MAUEC,YAAY,EAAE,EAVhB;MAWEC,oBAAoB,EAAE,CACpB,uBADoB,CACK;MADL;IAXxB,CADQ;EAFqB,CAAD,CAAhC;EAwBA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAuB,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAT;MAAiBC,QAAQ,EAAE,OAA3B;MAAoCC,MAAM,EAAE,OAA5C;MAAqDC,MAAM,EAAE;IAA7D,CAA9B;IAAA,uBACE,QAAC,GAAD;MAAK,IAAI,EAAEd,IAAX;MAAiB,OAAO,EAAErB;IAA1B;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA9BD;;GAAMoB,K;;KAAAA,K;AAgCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}