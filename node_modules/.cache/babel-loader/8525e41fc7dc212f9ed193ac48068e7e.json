{"ast":null,"code":"var _jsxFileName = \"/Users/samridhsood/Desktop/frontend/src/scenes/analytics/Apti.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, PointElement, LineElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, Title, Tooltip, Legend, PointElement, LineElement);\nconst options = {\n  indexAxis: 'x',\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'bottom'\n    },\n    title: {\n      display: true,\n      text: 'Apti marks obtained',\n      font: {\n        size: 18,\n        weight: 'bold'\n      }\n    }\n  },\n  scales: {\n    x: {\n      grid: {\n        display: false\n      }\n    },\n    y: {\n      grid: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true,\n        stepSize: 1\n      }\n    }\n  }\n};\n\nconst getChartData = () => {\n  if (!data1 || data1.length === 0) {\n    return {}; // Return empty object if data1 is undefined or empty\n  }\n\n  const labels = data1.map(item => item.Date);\n  const marks = data1.map(item => item.Total_Marks_obt);\n  return {\n    labels: labels,\n    datasets: [{\n      label: 'Marks obtained',\n      data: marks,\n      backgroundColor: ['rgba(238, 125, 49, 0.8)'],\n      // Orange with transparency\n      borderColor: ['rgba(238, 125, 49, 1)'],\n      // Orange\n      borderWidth: 2,\n      borderRadius: 10,\n      hoverBackgroundColor: ['rgba(238, 125, 49, 1)'] // Orange (hover)\n\n    }]\n  };\n};\n\nconst Apti = () => {\n  _s();\n\n  const [data1, setData1] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = 'http://localhost:3001/getSingleData';\n        const response = await axios.get(url);\n        const data = response.data;\n        console.log(\"testshare\", data);\n        setData1(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Agraph\",\n    style: {\n      width: '100%',\n      maxWidth: '500px',\n      height: '400px',\n      margin: '60px auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: getChartData(),\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Apti, \"LkGbg4eamH8ea2cMKeemOW/N158=\");\n\n_c = Apti;\nexport default Apti;\n\nvar _c;\n\n$RefreshReg$(_c, \"Apti\");","map":{"version":3,"names":["useEffect","useState","Line","axios","Chart","ChartJS","CategoryScale","LinearScale","Title","Tooltip","Legend","PointElement","LineElement","register","options","indexAxis","responsive","plugins","legend","position","title","display","text","font","size","weight","scales","x","grid","y","ticks","beginAtZero","stepSize","getChartData","data1","length","labels","map","item","Date","marks","Total_Marks_obt","datasets","label","data","backgroundColor","borderColor","borderWidth","borderRadius","hoverBackgroundColor","Apti","setData1","fetchData","url","response","get","console","log","error","width","maxWidth","height","margin"],"sources":["/Users/samridhsood/Desktop/frontend/src/scenes/analytics/Apti.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, PointElement, LineElement } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale, Title, Tooltip, Legend, PointElement, LineElement);\n\nconst options = {\n  indexAxis: 'x',\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'bottom',\n    },\n    title: {\n      display: true,\n      text: 'Apti marks obtained',\n      font: {\n        size: 18,\n        weight: 'bold',\n      },\n    },\n  },\n  scales: {\n    x: {\n      grid: {\n        display: false,\n      },\n    },\n    y: {\n      grid: {\n        display: false,\n      },\n      ticks: {\n        beginAtZero: true,\n        stepSize: 1,\n      },\n    },\n  },\n};\n\nconst getChartData = () => {\n  if (!data1 || data1.length === 0) {\n    return {}; // Return empty object if data1 is undefined or empty\n  }\n\n  const labels = data1.map((item) => item.Date);\n  const marks = data1.map((item) => item.Total_Marks_obt);\n\n  return {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Marks obtained',\n        data: marks,\n        backgroundColor: ['rgba(238, 125, 49, 0.8)'], // Orange with transparency\n        borderColor: ['rgba(238, 125, 49, 1)'], // Orange\n        borderWidth: 2,\n        borderRadius: 10,\n        hoverBackgroundColor: ['rgba(238, 125, 49, 1)'], // Orange (hover)\n      },\n    ],\n  };\n};\n\n\nconst Apti = () => {\n\n\n  const [data1, setData1] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = 'http://localhost:3001/getSingleData';\n        const response = await axios.get(url);\n        const data = response.data;\n        console.log(\"testshare\", data);\n        setData1(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className='Agraph' style={{ width: '100%', maxWidth: '500px', height: '400px', margin: '60px auto' }}>\n      <Line data={getChartData()} options={options} />\n    </div>\n  );\n};\n\nexport default Apti;"],"mappings":"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"},"metadata":{},"sourceType":"module"}