{"ast":null,"code":"var _jsxFileName = \"/Users/samridhsood/Desktop/frontend/src/scorecard/Totalscoreacard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Total from '../scenes/analytics/Total';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Totalscoreacard = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('Date: 2021-06-01');\n  useEffect(() => {\n    const fetchDates = async () => {\n      try {\n        const url = 'http://localhost:3001/getSingleData'; // Replace with your endpoint to fetch \n\n        const response = await axios.get(url);\n        const datesData = response.data.map(date => {\n          const dateObject = new Date(date.Date);\n          const formattedDate = dateObject.toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          });\n          return formattedDate;\n        });\n        console.log(\"testshare::::\", datesData);\n        setDates(datesData);\n      } catch (error) {\n        console.error('Error fetching dates:', error);\n      }\n    };\n\n    fetchDates();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (selectedDate) {\n          const url = 'http://localhost:3001/getDateData';\n          const response = await axios.get(url, {\n            params: {\n              date: selectedDate\n            }\n          });\n          const data = response.data;\n          console.log(\"testshare::::\", data);\n          setData(data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [selectedDate]);\n\n  const handleDateChange = event => {\n    setSelectedDate(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      style: {\n        marginTop: '3rem'\n      },\n      id: \"dateSelect\",\n      value: selectedDate,\n      onChange: handleDateChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), dates.map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: date,\n        children: date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [data && data.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded bg-white p-3\",\n        style: {\n          flex: '1',\n          marginRight: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Attempted On \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Time \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.TimeDuration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time Taken \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.TotalTimeTaken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Questions \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.TotalQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Correct Questions \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.Correct\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Incorrect Questions \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.Incorrect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Skipped \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.Skipped\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Marks Obtained \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.Total_Marks_obt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Percentage \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.Overall_Prec.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Agraph\",\n        style: {\n          flex: '2',\n          marginLeft: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Total, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Totalscoreacard, \"ogQLePLbTJh4PkSiD4vCxb5zVsc=\");\n\n_c = Totalscoreacard;\nexport default Totalscoreacard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Totalscoreacard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Total","Totalscoreacard","data","setData","dates","setDates","selectedDate","setSelectedDate","fetchDates","url","response","get","datesData","map","date","dateObject","Date","formattedDate","toLocaleDateString","year","month","day","console","log","error","fetchData","params","handleDateChange","event","target","value","marginTop","index","flex","marginRight","TimeDuration","TotalTimeTaken","TotalQuestion","Correct","Incorrect","Skipped","Total_Marks_obt","Overall_Prec","toFixed","marginLeft"],"sources":["/Users/samridhsood/Desktop/frontend/src/scorecard/Totalscoreacard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Total from '../scenes/analytics/Total';\n\n\nconst Totalscoreacard = () => {\n  const [data, setData] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('Date: 2021-06-01');\n\n  useEffect(() => {\n    const fetchDates = async () => {\n      try {\n        const url = 'http://localhost:3001/getSingleData'; // Replace with your endpoint to fetch \n        const response = await axios.get(url);\n        const datesData = response.data.map(date => {\n          const dateObject = new Date(date.Date);\n          const formattedDate = dateObject.toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n          return formattedDate;\n        });\n        console.log(\"testshare::::\", datesData);\n        setDates(datesData);\n      } catch (error) {\n        console.error('Error fetching dates:', error);\n      }\n    };\n\n    fetchDates();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (selectedDate) {\n          const url = 'http://localhost:3001/getDateData';\n          const response = await axios.get(url, {\n            params: {\n              date: selectedDate,\n            },\n          });\n          const data = response.data;\n          console.log(\"testshare::::\", data);\n          setData(data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n  \n    fetchData();\n  }, [selectedDate]);\n\n\n\n  const handleDateChange = (event) => {\n    setSelectedDate(event.target.value);\n\n  };\n\n  return (\n    <>\n      <select style={{ marginTop: '3rem' }} id=\"dateSelect\" value={selectedDate} onChange={handleDateChange}>\n      <option value=\"\">Select a date</option>\n        {dates.map((date, index) => (\n          <option key={index} value={date}>\n            {date}\n          </option>\n        ))}\n      </select>\n      <div className=\"d-flex\">\n        {data && data.map((data) => (\n          <div className=\"rounded bg-white p-3\" style={{ flex: '1', marginRight: '1rem' }}>\n            <div className=\"text\">\n              <p>\n                Attempted On <span>{selectedDate}</span></p>\n              <p>\n                Total Time <span>{data.TimeDuration}</span>\n              </p>\n              <p>\n                Time Taken <span>{data.TotalTimeTaken}</span>\n              </p>\n\n              <p>\n                Total Questions <span>{data.TotalQuestion}</span>\n              </p>\n              <p>\n                Correct Questions <span>{data.Correct}</span>\n              </p>\n              <p>\n                Incorrect Questions <span>{data.Incorrect}</span>\n              </p>\n              <p>\n                Skipped <span>{data.Skipped}</span>\n              </p>\n              <p>\n                Marks Obtained <span>{data.Total_Marks_obt}</span>\n              </p>\n            \n             \n              \n             \n              <p>\n                Total Percentage <span>{data.Overall_Prec.toFixed(2)}</span>\n              </p>\n            </div>\n          </div>\n        ))}\n        <div className=\"Agraph\" style={{ flex: '2', marginLeft: '1rem' }}>\n          <Total />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Totalscoreacard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}